document.addEventListener('DOMContentLoaded', function () {
    // Fetch all movies and populate the film list
    fetch('http://127.0.0.1:3000/films')
        .then(response => response.json())
        .then(movies => {
            const filmsList = document.getElementById('films');
            filmsList.innerHTML = ''; // Clear placeholder

            movies.forEach(movie => {
                // Fetch movie details for each movie
                fetchMovieDetails(movie.id);

                const listItem = document.createElement('li');
                listItem.classList.add('film', 'item', 'grid-item'); // Add 'grid-item' class
                listItem.innerHTML = `
                    <div class="grid-container">
                        <img src="${movie.poster}" alt="${movie.title}" class="film-poster">
                        <div class="film-details">
                            <div>
                                <h3>${movie.title}</h3>
                                <p>${movie.description}</p>
                                <ul id="movieDetails-${movie.id}"></ul>
                            </div>
                            <button onclick="buyTicket(${movie.id}, ${movie.tickets_sold}, ${movie.capacity})">Buy Ticket</button>
                        </div>
                    </div>
                `;
                filmsList.appendChild(listItem);
            });
        })
        .catch(error => console.error('Error fetching movies:', error));
});

function fetchMovieDetails(movieId) {
    fetch(`http://127.0.0.1:3000/films/${movieId}`)
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        })
        .then(movie => {
            console.log('Fetched Movie Details:', movie);
            const availableTickets = movie.capacity - movie.tickets_sold;

            const movieDetailsContainer = document.getElementById(`movieDetails-${movie.id}`);
            // Append the new content to the existing content
            movieDetailsContainer.innerHTML = `
                <li><strong>Runtime:</strong> ${movie.runtime} minutes</li>
                <li><strong>Showtime:</strong> ${movie.showtime}</li>
                <li><strong>Tickets Sold:</strong> ${movie.tickets_sold}</li>
                <li><strong>Capacity:</strong> ${movie.capacity}</li>
                <li><strong>Available Tickets:</strong> ${availableTickets}</li>
            `;
        })
        .catch(error => console.error(`Error fetching movie details for movieId ${movieId}:`, error));
}

function buyTicket(movieId, ticketsSold, capacity) {
    const availableTickets = capacity - ticketsSold;

    if (availableTickets > 0) {
        // Decreases the available tickets and updates the frontend
        const updatedTicketsSold = ticketsSold + 1;

        fetch(`http://127.0.0.1:3000/films/${movieId}`, {
            method: 'PATCH', // Assuming you have an endpoint to update tickets_sold
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ tickets_sold: updatedTicketsSold }),
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(updatedMovie => {
                // Check if tickets are still available after the update
                const updatedAvailableTickets = updatedMovie.capacity - updatedMovie.tickets_sold;

                if (updatedAvailableTickets > 0) {
                    // Update the movie details and show a success message
                    fetchMovieDetails(movieId);
                    alert('Ticket purchased successfully!');
                } else {
                    alert('Sorry, this show is sold out!');
                }
            })
            .catch(error => console.error('Error buying ticket:', error));
    } else {
        alert('Sorry, this show is sold out!');
    }
}